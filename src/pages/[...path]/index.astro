---
import type { GetStaticPaths, GetStaticPathsResult } from "astro";
import FrontMatterHero from "../../components/FrontMatterHero.astro";
import TokensRenderer from "../../components/TokensRenderer.astro";
import {
  globContents,
  type CustomLexerReturnType,
} from "../../core/globContents";
import BaseLayout from "../../layouts/BaseLayout.astro";

export const getStaticPaths: GetStaticPaths = async () => {
  const content = await globContents();
  const pages: GetStaticPathsResult = [];

  for (const [path, lexer] of content) {
    pages.push({ params: { path }, props: { lexer } });
  }

  return pages;
};

interface Props {
  lexer: () => Promise<CustomLexerReturnType>;
}

const { lexer } = Astro.props;
const { tokens, frontMatter } = await lexer();
---

<BaseLayout>
  <!-- <SEO slot="head" {title} {description} /> -->

  {frontMatter.hero && <FrontMatterHero hero={frontMatter.hero} />}

  <TokensRenderer {tokens} />
</BaseLayout>
