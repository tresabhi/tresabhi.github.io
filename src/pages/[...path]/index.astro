---
import type { GetStaticPaths, GetStaticPathsResult } from "astro";
import { SEO } from "astro-seo";
import { type TokensList } from "marked";
import TokensRenderer from "../../components/TokensRenderer.astro";
import { globContents } from "../../core/globContents";
import BaseLayout from "../../layouts/BaseLayout.astro";

export const getStaticPaths: GetStaticPaths = async () => {
  const content = await globContents();
  const pages: GetStaticPathsResult = [];

  for (const [path, lexer] of content) {
    pages.push({ params: { path }, props: { lexer } });
  }

  return pages;
};

interface Props {
  lexer: () => Promise<TokensList>;
}

const { lexer } = Astro.props;
const tokens = await lexer();

if (tokens[0].type !== "heading" || tokens[0].depth !== 1) {
  throw new Error("First token must be a level 1 heading");
}

if (tokens[1].type !== "paragraph") {
  throw new Error("Second token must be a paragraph");
}

const title = tokens[0].text;
const description = tokens[1].text;
---

<BaseLayout>
  <SEO slot="head" {title} {description} />
  <TokensRenderer {tokens} />
</BaseLayout>
