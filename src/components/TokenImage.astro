---
import { Flex, Text } from "@radix-ui/themes";
import type { Tokens } from "marked";
import { sourceSet } from "../core/sourceSet";
import type { TokenRendererProps } from "./Markdown.astro";

type Props = TokenRendererProps<Tokens.Paragraph>;

const pattern = /!\[(.+)?]\((.+)\)/;

const { token } = Astro.props;
const [, alt, src] = token.text.match(pattern) ?? [];
const { srcset, originalUrl, originalSize } = await sourceSet(src);
---

<style
  define:vars={{
    "aspect-ratio": `${originalSize[0]} / ${originalSize[1]}`,
    "max-width": `${originalSize[0]}px`,
  }}
>
  .image-content {
    border-radius: var(--radius-3);
    aspect-ratio: var(--aspect-ratio);
    max-width: min(100%, var(--max-width));
  }
</style>

<Flex
  overflow="hidden"
  width="fit-content"
  mt="4"
  mb="6"
  gap="3"
  align="start"
  direction="column"
>
  <img
    class="image-content"
    src={originalUrl}
    {srcset}
    alt={alt ?? `Unlabeled image from ${new URL(src).host}`}
  />
  {
    alt && (
      <Text size="2" color="gray">
        {alt}
      </Text>
    )
  }
</Flex>
