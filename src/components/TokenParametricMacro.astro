---
import type { Tokens } from "marked";
import MacroColored from "./MacroColored.astro";
import type { TokenRendererProps } from "./TokenRenderer.astro";

export interface ParametricMacroToken extends Tokens.Generic {
  type: "parametricmacro";
  name: string;
  parameters: unknown[];
}

// gnarly prettier vs astro parsing conflict
// prettier-ignore
export type ParametricMacroRendererProps = Pick<ParametricMacroToken, "parameters">;

type Props = TokenRendererProps<ParametricMacroToken>;

const Macros = {
  colored: MacroColored,
};

const { token } = Astro.props;
let Macro;

if (token.name in Macros) {
  Macro = Macros[token.name as keyof typeof Macros];
} else {
  throw new Error(`Unknown macro ${token.name}`);
}
---

<Macro parameters={token.parameters} />
